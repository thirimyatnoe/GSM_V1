'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsSaleLooseDiamond"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsSaleLooseDiamond
    Inherits Global.System.Data.DataSet
    
    Private tabledtLooseDiamond As dtLooseDiamondDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("dtLooseDiamond")) Is Nothing) Then
                MyBase.Tables.Add(New dtLooseDiamondDataTable(ds.Tables("dtLooseDiamond")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtLooseDiamond() As dtLooseDiamondDataTable
        Get
            Return Me.tabledtLooseDiamond
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsSaleLooseDiamond = CType(MyBase.Clone,dsSaleLooseDiamond)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("dtLooseDiamond")) Is Nothing) Then
                MyBase.Tables.Add(New dtLooseDiamondDataTable(ds.Tables("dtLooseDiamond")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabledtLooseDiamond = CType(MyBase.Tables("dtLooseDiamond"),dtLooseDiamondDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtLooseDiamond) Is Nothing) Then
                Me.tabledtLooseDiamond.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsSaleLooseDiamond"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsSaleLooseDiamond.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabledtLooseDiamond = New dtLooseDiamondDataTable()
        MyBase.Tables.Add(Me.tabledtLooseDiamond)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedtLooseDiamond() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsSaleLooseDiamond = New dsSaleLooseDiamond()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dtLooseDiamondRowChangeEventHandler(ByVal sender As Object, ByVal e As dtLooseDiamondRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtLooseDiamondDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtLooseDiamondRow)
        
        Private columnSaleLooseDiamondID As Global.System.Data.DataColumn
        
        Private columnSaleLooseDiamondDetailID As Global.System.Data.DataColumn
        
        Private columnSaleDate As Global.System.Data.DataColumn
        
        Private columnCustomerID As Global.System.Data.DataColumn
        
        Private columnStaff As Global.System.Data.DataColumn
        
        Private columnRemark As Global.System.Data.DataColumn
        
        Private columnTotalAmount As Global.System.Data.DataColumn
        
        Private columnAddOrSub As Global.System.Data.DataColumn
        
        Private columnDiscountAmount As Global.System.Data.DataColumn
        
        Private columnPaidAmount As Global.System.Data.DataColumn
        
        Private columnPromotionDiscount As Global.System.Data.DataColumn
        
        Private columnPurchaseHeaderID As Global.System.Data.DataColumn
        
        Private columnPurchaseAmount As Global.System.Data.DataColumn
        
        Private columnIsOtherCash As Global.System.Data.DataColumn
        
        Private columnOtherCashAmount As Global.System.Data.DataColumn
        
        Private columnSRTaxPer As Global.System.Data.DataColumn
        
        Private columnSRTaxAmt As Global.System.Data.DataColumn
        
        Private columnForSaleID As Global.System.Data.DataColumn
        
        Private columnItemCode As Global.System.Data.DataColumn
        
        Private columnGemsCategoryID As Global.System.Data.DataColumn
        
        Private columnShape As Global.System.Data.DataColumn
        
        Private columnColor As Global.System.Data.DataColumn
        
        Private columnClarity As Global.System.Data.DataColumn
        
        Private columnGemsCategory As Global.System.Data.DataColumn
        
        Private columnGemsName As Global.System.Data.DataColumn
        
        Private columnSalesRate As Global.System.Data.DataColumn
        
        Private columnQty As Global.System.Data.DataColumn
        
        Private columnItemTK As Global.System.Data.DataColumn
        
        Private columnItemTG As Global.System.Data.DataColumn
        
        Private columnGemsTW As Global.System.Data.DataColumn
        
        Private columnYOrCOrG As Global.System.Data.DataColumn
        
        Private columnIsFixPrice As Global.System.Data.DataColumn
        
        Private columnFixPrice As Global.System.Data.DataColumn
        
        Private columnGemsPrice As Global.System.Data.DataColumn
        
        Private columnItemAmount As Global.System.Data.DataColumn
        
        Private columnItemAddOrSub As Global.System.Data.DataColumn
        
        Private columnDesignCharges As Global.System.Data.DataColumn
        
        Private columnDesignChargesRate As Global.System.Data.DataColumn
        
        Private columnWhiteCharges As Global.System.Data.DataColumn
        
        Private columnPlatingCharges As Global.System.Data.DataColumn
        
        Private columnMountingCharges As Global.System.Data.DataColumn
        
        Private columnIsSaleReturn As Global.System.Data.DataColumn
        
        Private columnSellingRate As Global.System.Data.DataColumn
        
        Private columnSellingAmt As Global.System.Data.DataColumn
        
        Private columnIsOriginalFixedPrice As Global.System.Data.DataColumn
        
        Private columnOriginalFixedPrice As Global.System.Data.DataColumn
        
        Private columnIsOriginalPriceCarat As Global.System.Data.DataColumn
        
        Private columnOriginalPriceCarat As Global.System.Data.DataColumn
        
        Private columnOriginalCode As Global.System.Data.DataColumn
        
        Private columnCustomerName As Global.System.Data.DataColumn
        
        Private columnCustomerAddress As Global.System.Data.DataColumn
        
        Private columnPhoneNo As Global.System.Data.DataColumn
        
        Private columnBalanceAmount As Global.System.Data.DataColumn
        
        Private columnPromotionAmount As Global.System.Data.DataColumn
        
        Private columnTotalNetAmount As Global.System.Data.DataColumn
        
        Private columnIsChange As Global.System.Data.DataColumn
        
        Private columnItemK As Global.System.Data.DataColumn
        
        Private columnItemP As Global.System.Data.DataColumn
        
        Private columnItemY As Global.System.Data.DataColumn
        
        Private columnGivenDate As Global.System.Data.DataColumn
        
        Private columnTotalCharges As Global.System.Data.DataColumn
        
        Private columnPriceCode As Global.System.Data.DataColumn
        
        Private columnMemberID As Global.System.Data.DataColumn
        
        Private columnMemberCode As Global.System.Data.DataColumn
        
        Private columnMemberName As Global.System.Data.DataColumn
        
        Private columnIsRedeemInvoice As Global.System.Data.DataColumn
        
        Private columnRedeemPoint As Global.System.Data.DataColumn
        
        Private columnRedeemValue As Global.System.Data.DataColumn
        
        Private columnTopupPoint As Global.System.Data.DataColumn

        Private columnTopupValue As Global.System.Data.DataColumn

        Private columnMemberDis As Global.System.Data.DataColumn

        Private columnMemberDiscountAmt As Global.System.Data.DataColumn

        Private columnTransactionID As Global.System.Data.DataColumn

        Private columnInvoiceStatus As Global.System.Data.DataColumn

        Private columnPointBalance As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "dtLooseDiamond"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SaleLooseDiamondIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaleLooseDiamondID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SaleLooseDiamondDetailIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaleLooseDiamondDetailID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SaleDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaleDate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CustomerIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomerID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StaffColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStaff
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemark
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAmount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AddOrSubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddOrSub
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DiscountAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscountAmount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PaidAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPaidAmount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PromotionDiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPromotionDiscount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PurchaseHeaderIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseHeaderID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PurchaseAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPurchaseAmount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IsOtherCashColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsOtherCash
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OtherCashAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherCashAmount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SRTaxPerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRTaxPer
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SRTaxAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSRTaxAmt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ForSaleIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForSaleID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ItemCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GemsCategoryIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGemsCategoryID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ShapeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShape
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ColorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ClarityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClarity
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GemsCategoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGemsCategory
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GemsNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGemsName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SalesRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalesRate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQty
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ItemTKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemTK
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ItemTGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemTG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GemsTWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGemsTW
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property YOrCOrGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYOrCOrG
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IsFixPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsFixPrice
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FixPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFixPrice
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GemsPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGemsPrice
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ItemAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemAmount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ItemAddOrSubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemAddOrSub
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DesignChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignCharges
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DesignChargesRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignChargesRate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property WhiteChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWhiteCharges
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PlatingChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlatingCharges
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MountingChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMountingCharges
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IsSaleReturnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsSaleReturn
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SellingRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSellingRate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SellingAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSellingAmt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IsOriginalFixedPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsOriginalFixedPrice
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OriginalFixedPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalFixedPrice
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IsOriginalPriceCaratColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsOriginalPriceCarat
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OriginalPriceCaratColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalPriceCarat
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OriginalCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOriginalCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CustomerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomerName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CustomerAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustomerAddress
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PhoneNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhoneNo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BalanceAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBalanceAmount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PromotionAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPromotionAmount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalNetAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalNetAmount
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IsChangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsChange
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ItemKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemK
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ItemPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemP
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ItemYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemY
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GivenDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGivenDate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalChargesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalCharges
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PriceCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriceCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MemberIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemberID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MemberCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemberCode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MemberNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemberName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IsRedeemInvoiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsRedeemInvoice
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RedeemPointColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedeemPoint
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RedeemValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedeemValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TopupPointColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTopupPoint
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TopupValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTopupValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MemberDisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemberDis
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MemberDiscountAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemberDiscountAmt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TransactionIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTransactionID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property InvoiceStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvoiceStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PointBalanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPointBalance
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As dtLooseDiamondRow
            Get
                Return CType(Me.Rows(index), dtLooseDiamondRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event dtLooseDiamondRowChanging As dtLooseDiamondRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event dtLooseDiamondRowChanged As dtLooseDiamondRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event dtLooseDiamondRowDeleting As dtLooseDiamondRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event dtLooseDiamondRowDeleted As dtLooseDiamondRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AdddtLooseDiamondRow(ByVal row As dtLooseDiamondRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AdddtLooseDiamondRow( _
                    ByVal SaleLooseDiamondID As String, _
                    ByVal SaleLooseDiamondDetailID As String, _
                    ByVal SaleDate As String, _
                    ByVal CustomerID As String, _
                    ByVal Staff As String, _
                    ByVal Remark As String, _
                    ByVal TotalAmount As String, _
                    ByVal AddOrSub As String, _
                    ByVal DiscountAmount As String, _
                    ByVal PaidAmount As String, _
                    ByVal PromotionDiscount As String, _
                    ByVal PurchaseHeaderID As String, _
                    ByVal PurchaseAmount As String, _
                    ByVal IsOtherCash As String, _
                    ByVal OtherCashAmount As String, _
                    ByVal SRTaxPer As String, _
                    ByVal SRTaxAmt As String, _
                    ByVal ForSaleID As String, _
                    ByVal ItemCode As String, _
                    ByVal GemsCategoryID As String, _
                    ByVal Shape As String, _
                    ByVal Color As String, _
                    ByVal Clarity As String, _
                    ByVal GemsCategory As String, _
                    ByVal GemsName As String, _
                    ByVal SalesRate As String, _
                    ByVal Qty As String, _
                    ByVal ItemTK As String, _
                    ByVal ItemTG As String, _
                    ByVal GemsTW As String, _
                    ByVal YOrCOrG As String, _
                    ByVal IsFixPrice As String, _
                    ByVal FixPrice As String, _
                    ByVal GemsPrice As String, _
                    ByVal ItemAmount As String, _
                    ByVal ItemAddOrSub As String, _
                    ByVal DesignCharges As String, _
                    ByVal DesignChargesRate As String, _
                    ByVal WhiteCharges As String, _
                    ByVal PlatingCharges As String, _
                    ByVal MountingCharges As String, _
                    ByVal IsSaleReturn As String, _
                    ByVal SellingRate As String, _
                    ByVal SellingAmt As String, _
                    ByVal IsOriginalFixedPrice As String, _
                    ByVal OriginalFixedPrice As String, _
                    ByVal IsOriginalPriceCarat As String, _
                    ByVal OriginalPriceCarat As String, _
                    ByVal OriginalCode As String, _
                    ByVal CustomerName As String, _
                    ByVal CustomerAddress As String, _
                    ByVal PhoneNo As String, _
                    ByVal BalanceAmount As String, _
                    ByVal PromotionAmount As String, _
                    ByVal TotalNetAmount As String, _
                    ByVal IsChange As String, _
                    ByVal ItemK As String, _
                    ByVal ItemP As String, _
                    ByVal ItemY As String, _
                    ByVal GivenDate As String, _
                    ByVal TotalCharges As String, _
                    ByVal PriceCode As String, _
                    ByVal MemberID As String, _
                    ByVal MemberCode As String, _
                    ByVal MemberName As String, _
                    ByVal IsRedeemInvoice As String, _
                    ByVal RedeemPoint As String, _
                    ByVal RedeemValue As String, _
                    ByVal TopupPoint As String, _
                    ByVal TopupValue As String, _
                    ByVal MemberDis As String, _
                    ByVal MemberDiscountAmt As String, _
                    ByVal TransactionID As String, _
                    ByVal InvoiceStatus As String, _
                    ByVal PointBalance As String) As dtLooseDiamondRow
            Dim rowdtLooseDiamondRow As dtLooseDiamondRow = CType(Me.NewRow, dtLooseDiamondRow)
            Dim columnValuesArray() As Object = New Object() {SaleLooseDiamondID, SaleLooseDiamondDetailID, SaleDate, CustomerID, Staff, Remark, TotalAmount, AddOrSub, DiscountAmount, PaidAmount, PromotionDiscount, PurchaseHeaderID, PurchaseAmount, IsOtherCash, OtherCashAmount, SRTaxPer, SRTaxAmt, ForSaleID, ItemCode, GemsCategoryID, Shape, Color, Clarity, GemsCategory, GemsName, SalesRate, Qty, ItemTK, ItemTG, GemsTW, YOrCOrG, IsFixPrice, FixPrice, GemsPrice, ItemAmount, ItemAddOrSub, DesignCharges, DesignChargesRate, WhiteCharges, PlatingCharges, MountingCharges, IsSaleReturn, SellingRate, SellingAmt, IsOriginalFixedPrice, OriginalFixedPrice, IsOriginalPriceCarat, OriginalPriceCarat, OriginalCode, CustomerName, CustomerAddress, PhoneNo, BalanceAmount, PromotionAmount, TotalNetAmount, IsChange, ItemK, ItemP, ItemY, GivenDate, TotalCharges, PriceCode, MemberID, MemberCode, MemberName, IsRedeemInvoice, RedeemPoint, RedeemValue, TopupPoint, TopupValue, MemberDis, MemberDiscountAmt, TransactionID, InvoiceStatus, PointBalance}
            rowdtLooseDiamondRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtLooseDiamondRow)
            Return rowdtLooseDiamondRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtLooseDiamondDataTable = CType(MyBase.Clone, dtLooseDiamondDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtLooseDiamondDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnSaleLooseDiamondID = MyBase.Columns("SaleLooseDiamondID")
            Me.columnSaleLooseDiamondDetailID = MyBase.Columns("SaleLooseDiamondDetailID")
            Me.columnSaleDate = MyBase.Columns("SaleDate")
            Me.columnCustomerID = MyBase.Columns("CustomerID")
            Me.columnStaff = MyBase.Columns("Staff")
            Me.columnRemark = MyBase.Columns("Remark")
            Me.columnTotalAmount = MyBase.Columns("TotalAmount")
            Me.columnAddOrSub = MyBase.Columns("AddOrSub")
            Me.columnDiscountAmount = MyBase.Columns("DiscountAmount")
            Me.columnPaidAmount = MyBase.Columns("PaidAmount")
            Me.columnPromotionDiscount = MyBase.Columns("PromotionDiscount")
            Me.columnPurchaseHeaderID = MyBase.Columns("PurchaseHeaderID")
            Me.columnPurchaseAmount = MyBase.Columns("PurchaseAmount")
            Me.columnIsOtherCash = MyBase.Columns("IsOtherCash")
            Me.columnOtherCashAmount = MyBase.Columns("OtherCashAmount")
            Me.columnSRTaxPer = MyBase.Columns("SRTaxPer")
            Me.columnSRTaxAmt = MyBase.Columns("SRTaxAmt")
            Me.columnForSaleID = MyBase.Columns("ForSaleID")
            Me.columnItemCode = MyBase.Columns("ItemCode")
            Me.columnGemsCategoryID = MyBase.Columns("GemsCategoryID")
            Me.columnShape = MyBase.Columns("Shape")
            Me.columnColor = MyBase.Columns("Color")
            Me.columnClarity = MyBase.Columns("Clarity")
            Me.columnGemsCategory = MyBase.Columns("GemsCategory")
            Me.columnGemsName = MyBase.Columns("GemsName")
            Me.columnSalesRate = MyBase.Columns("SalesRate")
            Me.columnQty = MyBase.Columns("Qty")
            Me.columnItemTK = MyBase.Columns("ItemTK")
            Me.columnItemTG = MyBase.Columns("ItemTG")
            Me.columnGemsTW = MyBase.Columns("GemsTW")
            Me.columnYOrCOrG = MyBase.Columns("YOrCOrG")
            Me.columnIsFixPrice = MyBase.Columns("IsFixPrice")
            Me.columnFixPrice = MyBase.Columns("FixPrice")
            Me.columnGemsPrice = MyBase.Columns("GemsPrice")
            Me.columnItemAmount = MyBase.Columns("ItemAmount")
            Me.columnItemAddOrSub = MyBase.Columns("ItemAddOrSub")
            Me.columnDesignCharges = MyBase.Columns("DesignCharges")
            Me.columnDesignChargesRate = MyBase.Columns("DesignChargesRate")
            Me.columnWhiteCharges = MyBase.Columns("WhiteCharges")
            Me.columnPlatingCharges = MyBase.Columns("PlatingCharges")
            Me.columnMountingCharges = MyBase.Columns("MountingCharges")
            Me.columnIsSaleReturn = MyBase.Columns("IsSaleReturn")
            Me.columnSellingRate = MyBase.Columns("SellingRate")
            Me.columnSellingAmt = MyBase.Columns("SellingAmt")
            Me.columnIsOriginalFixedPrice = MyBase.Columns("IsOriginalFixedPrice")
            Me.columnOriginalFixedPrice = MyBase.Columns("OriginalFixedPrice")
            Me.columnIsOriginalPriceCarat = MyBase.Columns("IsOriginalPriceCarat")
            Me.columnOriginalPriceCarat = MyBase.Columns("OriginalPriceCarat")
            Me.columnOriginalCode = MyBase.Columns("OriginalCode")
            Me.columnCustomerName = MyBase.Columns("CustomerName")
            Me.columnCustomerAddress = MyBase.Columns("CustomerAddress")
            Me.columnPhoneNo = MyBase.Columns("PhoneNo")
            Me.columnBalanceAmount = MyBase.Columns("BalanceAmount")
            Me.columnPromotionAmount = MyBase.Columns("PromotionAmount")
            Me.columnTotalNetAmount = MyBase.Columns("TotalNetAmount")
            Me.columnIsChange = MyBase.Columns("IsChange")
            Me.columnItemK = MyBase.Columns("ItemK")
            Me.columnItemP = MyBase.Columns("ItemP")
            Me.columnItemY = MyBase.Columns("ItemY")
            Me.columnGivenDate = MyBase.Columns("GivenDate")
            Me.columnTotalCharges = MyBase.Columns("TotalCharges")
            Me.columnPriceCode = MyBase.Columns("PriceCode")
            Me.columnMemberID = MyBase.Columns("MemberID")
            Me.columnMemberCode = MyBase.Columns("MemberCode")
            Me.columnMemberName = MyBase.Columns("MemberName")
            Me.columnIsRedeemInvoice = MyBase.Columns("IsRedeemInvoice")
            Me.columnRedeemPoint = MyBase.Columns("RedeemPoint")
            Me.columnRedeemValue = MyBase.Columns("RedeemValue")
            Me.columnTopupPoint = MyBase.Columns("TopupPoint")
            Me.columnTopupValue = MyBase.Columns("TopupValue")
            Me.columnMemberDis = MyBase.Columns("MemberDis")
            Me.columnMemberDiscountAmt = MyBase.Columns("MemberDiscountAmt")
            Me.columnTransactionID = MyBase.Columns("TransactionID")
            Me.columnInvoiceStatus = MyBase.Columns("InvoiceStatus")
            Me.columnPointBalance = MyBase.Columns("PointBalance")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnSaleLooseDiamondID = New Global.System.Data.DataColumn("SaleLooseDiamondID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaleLooseDiamondID)
            Me.columnSaleLooseDiamondDetailID = New Global.System.Data.DataColumn("SaleLooseDiamondDetailID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaleLooseDiamondDetailID)
            Me.columnSaleDate = New Global.System.Data.DataColumn("SaleDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaleDate)
            Me.columnCustomerID = New Global.System.Data.DataColumn("CustomerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomerID)
            Me.columnStaff = New Global.System.Data.DataColumn("Staff", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStaff)
            Me.columnRemark = New Global.System.Data.DataColumn("Remark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemark)
            Me.columnTotalAmount = New Global.System.Data.DataColumn("TotalAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAmount)
            Me.columnAddOrSub = New Global.System.Data.DataColumn("AddOrSub", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddOrSub)
            Me.columnDiscountAmount = New Global.System.Data.DataColumn("DiscountAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscountAmount)
            Me.columnPaidAmount = New Global.System.Data.DataColumn("PaidAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPaidAmount)
            Me.columnPromotionDiscount = New Global.System.Data.DataColumn("PromotionDiscount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPromotionDiscount)
            Me.columnPurchaseHeaderID = New Global.System.Data.DataColumn("PurchaseHeaderID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseHeaderID)
            Me.columnPurchaseAmount = New Global.System.Data.DataColumn("PurchaseAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPurchaseAmount)
            Me.columnIsOtherCash = New Global.System.Data.DataColumn("IsOtherCash", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsOtherCash)
            Me.columnOtherCashAmount = New Global.System.Data.DataColumn("OtherCashAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherCashAmount)
            Me.columnSRTaxPer = New Global.System.Data.DataColumn("SRTaxPer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRTaxPer)
            Me.columnSRTaxAmt = New Global.System.Data.DataColumn("SRTaxAmt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSRTaxAmt)
            Me.columnForSaleID = New Global.System.Data.DataColumn("ForSaleID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForSaleID)
            Me.columnItemCode = New Global.System.Data.DataColumn("ItemCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemCode)
            Me.columnGemsCategoryID = New Global.System.Data.DataColumn("GemsCategoryID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGemsCategoryID)
            Me.columnShape = New Global.System.Data.DataColumn("Shape", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShape)
            Me.columnColor = New Global.System.Data.DataColumn("Color", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColor)
            Me.columnClarity = New Global.System.Data.DataColumn("Clarity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClarity)
            Me.columnGemsCategory = New Global.System.Data.DataColumn("GemsCategory", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGemsCategory)
            Me.columnGemsName = New Global.System.Data.DataColumn("GemsName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGemsName)
            Me.columnSalesRate = New Global.System.Data.DataColumn("SalesRate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalesRate)
            Me.columnQty = New Global.System.Data.DataColumn("Qty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQty)
            Me.columnItemTK = New Global.System.Data.DataColumn("ItemTK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemTK)
            Me.columnItemTG = New Global.System.Data.DataColumn("ItemTG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemTG)
            Me.columnGemsTW = New Global.System.Data.DataColumn("GemsTW", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGemsTW)
            Me.columnYOrCOrG = New Global.System.Data.DataColumn("YOrCOrG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYOrCOrG)
            Me.columnIsFixPrice = New Global.System.Data.DataColumn("IsFixPrice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsFixPrice)
            Me.columnFixPrice = New Global.System.Data.DataColumn("FixPrice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFixPrice)
            Me.columnGemsPrice = New Global.System.Data.DataColumn("GemsPrice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGemsPrice)
            Me.columnItemAmount = New Global.System.Data.DataColumn("ItemAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemAmount)
            Me.columnItemAddOrSub = New Global.System.Data.DataColumn("ItemAddOrSub", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemAddOrSub)
            Me.columnDesignCharges = New Global.System.Data.DataColumn("DesignCharges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignCharges)
            Me.columnDesignChargesRate = New Global.System.Data.DataColumn("DesignChargesRate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignChargesRate)
            Me.columnWhiteCharges = New Global.System.Data.DataColumn("WhiteCharges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWhiteCharges)
            Me.columnPlatingCharges = New Global.System.Data.DataColumn("PlatingCharges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlatingCharges)
            Me.columnMountingCharges = New Global.System.Data.DataColumn("MountingCharges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMountingCharges)
            Me.columnIsSaleReturn = New Global.System.Data.DataColumn("IsSaleReturn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsSaleReturn)
            Me.columnSellingRate = New Global.System.Data.DataColumn("SellingRate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSellingRate)
            Me.columnSellingAmt = New Global.System.Data.DataColumn("SellingAmt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSellingAmt)
            Me.columnIsOriginalFixedPrice = New Global.System.Data.DataColumn("IsOriginalFixedPrice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsOriginalFixedPrice)
            Me.columnOriginalFixedPrice = New Global.System.Data.DataColumn("OriginalFixedPrice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalFixedPrice)
            Me.columnIsOriginalPriceCarat = New Global.System.Data.DataColumn("IsOriginalPriceCarat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsOriginalPriceCarat)
            Me.columnOriginalPriceCarat = New Global.System.Data.DataColumn("OriginalPriceCarat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalPriceCarat)
            Me.columnOriginalCode = New Global.System.Data.DataColumn("OriginalCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOriginalCode)
            Me.columnCustomerName = New Global.System.Data.DataColumn("CustomerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomerName)
            Me.columnCustomerAddress = New Global.System.Data.DataColumn("CustomerAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustomerAddress)
            Me.columnPhoneNo = New Global.System.Data.DataColumn("PhoneNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhoneNo)
            Me.columnBalanceAmount = New Global.System.Data.DataColumn("BalanceAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBalanceAmount)
            Me.columnPromotionAmount = New Global.System.Data.DataColumn("PromotionAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPromotionAmount)
            Me.columnTotalNetAmount = New Global.System.Data.DataColumn("TotalNetAmount", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalNetAmount)
            Me.columnIsChange = New Global.System.Data.DataColumn("IsChange", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsChange)
            Me.columnItemK = New Global.System.Data.DataColumn("ItemK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemK)
            Me.columnItemP = New Global.System.Data.DataColumn("ItemP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemP)
            Me.columnItemY = New Global.System.Data.DataColumn("ItemY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemY)
            Me.columnGivenDate = New Global.System.Data.DataColumn("GivenDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGivenDate)
            Me.columnTotalCharges = New Global.System.Data.DataColumn("TotalCharges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalCharges)
            Me.columnPriceCode = New Global.System.Data.DataColumn("PriceCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriceCode)
            Me.columnMemberID = New Global.System.Data.DataColumn("MemberID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemberID)
            Me.columnMemberCode = New Global.System.Data.DataColumn("MemberCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemberCode)
            Me.columnMemberName = New Global.System.Data.DataColumn("MemberName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemberName)
            Me.columnIsRedeemInvoice = New Global.System.Data.DataColumn("IsRedeemInvoice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsRedeemInvoice)
            Me.columnRedeemPoint = New Global.System.Data.DataColumn("RedeemPoint", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedeemPoint)
            Me.columnRedeemValue = New Global.System.Data.DataColumn("RedeemValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedeemValue)
            Me.columnTopupPoint = New Global.System.Data.DataColumn("TopupPoint", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTopupPoint)
            Me.columnTopupValue = New Global.System.Data.DataColumn("TopupValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTopupValue)
            Me.columnMemberDis = New Global.System.Data.DataColumn("MemberDis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemberDis)
            Me.columnMemberDiscountAmt = New Global.System.Data.DataColumn("MemberDiscountAmt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemberDiscountAmt)
            Me.columnTransactionID = New Global.System.Data.DataColumn("TransactionID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTransactionID)
            Me.columnInvoiceStatus = New Global.System.Data.DataColumn("InvoiceStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvoiceStatus)
            Me.columnPointBalance = New Global.System.Data.DataColumn("PointBalance", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPointBalance)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewdtLooseDiamondRow() As dtLooseDiamondRow
            Return CType(Me.NewRow, dtLooseDiamondRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtLooseDiamondRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtLooseDiamondRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtLooseDiamondRowChangedEvent) Is Nothing) Then
                RaiseEvent dtLooseDiamondRowChanged(Me, New dtLooseDiamondRowChangeEvent(CType(e.Row, dtLooseDiamondRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtLooseDiamondRowChangingEvent) Is Nothing) Then
                RaiseEvent dtLooseDiamondRowChanging(Me, New dtLooseDiamondRowChangeEvent(CType(e.Row, dtLooseDiamondRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtLooseDiamondRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtLooseDiamondRowDeleted(Me, New dtLooseDiamondRowChangeEvent(CType(e.Row, dtLooseDiamondRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtLooseDiamondRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtLooseDiamondRowDeleting(Me, New dtLooseDiamondRowChangeEvent(CType(e.Row, dtLooseDiamondRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovedtLooseDiamondRow(ByVal row As dtLooseDiamondRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsSaleLooseDiamond = New dsSaleLooseDiamond()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtLooseDiamondDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtLooseDiamondRow
        Inherits Global.System.Data.DataRow

        Private tabledtLooseDiamond As dtLooseDiamondDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtLooseDiamond = CType(Me.Table, dtLooseDiamondDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SaleLooseDiamondID() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.SaleLooseDiamondIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaleLooseDiamondID' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.SaleLooseDiamondIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SaleLooseDiamondDetailID() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.SaleLooseDiamondDetailIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaleLooseDiamondDetailID' in table 'dtLooseDiamond' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.SaleLooseDiamondDetailIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SaleDate() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.SaleDateColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaleDate' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.SaleDateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CustomerID() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.CustomerIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomerID' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.CustomerIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Staff() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.StaffColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Staff' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.StaffColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Remark() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.RemarkColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remark' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.RemarkColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalAmount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.TotalAmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalAmount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.TotalAmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AddOrSub() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.AddOrSubColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AddOrSub' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.AddOrSubColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DiscountAmount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.DiscountAmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DiscountAmount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.DiscountAmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PaidAmount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.PaidAmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PaidAmount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.PaidAmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PromotionDiscount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.PromotionDiscountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PromotionDiscount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.PromotionDiscountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PurchaseHeaderID() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.PurchaseHeaderIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseHeaderID' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.PurchaseHeaderIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PurchaseAmount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.PurchaseAmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PurchaseAmount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.PurchaseAmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IsOtherCash() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.IsOtherCashColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsOtherCash' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.IsOtherCashColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OtherCashAmount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.OtherCashAmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherCashAmount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.OtherCashAmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SRTaxPer() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.SRTaxPerColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRTaxPer' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.SRTaxPerColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SRTaxAmt() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.SRTaxAmtColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SRTaxAmt' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.SRTaxAmtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ForSaleID() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ForSaleIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForSaleID' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ForSaleIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ItemCode() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ItemCodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemCode' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ItemCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GemsCategoryID() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.GemsCategoryIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GemsCategoryID' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.GemsCategoryIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Shape() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ShapeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shape' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ShapeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Color() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ColorColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Color' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ColorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Clarity() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ClarityColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Clarity' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ClarityColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GemsCategory() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.GemsCategoryColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GemsCategory' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.GemsCategoryColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GemsName() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.GemsNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GemsName' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.GemsNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SalesRate() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.SalesRateColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SalesRate' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.SalesRateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Qty() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.QtyColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qty' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.QtyColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ItemTK() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ItemTKColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemTK' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ItemTKColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ItemTG() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ItemTGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemTG' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ItemTGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GemsTW() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.GemsTWColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GemsTW' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.GemsTWColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property YOrCOrG() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.YOrCOrGColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YOrCOrG' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.YOrCOrGColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IsFixPrice() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.IsFixPriceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsFixPrice' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.IsFixPriceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FixPrice() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.FixPriceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FixPrice' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.FixPriceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GemsPrice() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.GemsPriceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GemsPrice' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.GemsPriceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ItemAmount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ItemAmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemAmount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ItemAmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ItemAddOrSub() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ItemAddOrSubColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemAddOrSub' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ItemAddOrSubColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DesignCharges() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.DesignChargesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesignCharges' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.DesignChargesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DesignChargesRate() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.DesignChargesRateColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesignChargesRate' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.DesignChargesRateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property WhiteCharges() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.WhiteChargesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WhiteCharges' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.WhiteChargesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PlatingCharges() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.PlatingChargesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PlatingCharges' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.PlatingChargesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MountingCharges() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.MountingChargesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MountingCharges' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.MountingChargesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IsSaleReturn() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.IsSaleReturnColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsSaleReturn' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.IsSaleReturnColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SellingRate() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.SellingRateColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SellingRate' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.SellingRateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SellingAmt() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.SellingAmtColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SellingAmt' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.SellingAmtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IsOriginalFixedPrice() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.IsOriginalFixedPriceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsOriginalFixedPrice' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.IsOriginalFixedPriceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OriginalFixedPrice() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.OriginalFixedPriceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalFixedPrice' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.OriginalFixedPriceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IsOriginalPriceCarat() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.IsOriginalPriceCaratColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsOriginalPriceCarat' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.IsOriginalPriceCaratColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OriginalPriceCarat() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.OriginalPriceCaratColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalPriceCarat' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.OriginalPriceCaratColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OriginalCode() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.OriginalCodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OriginalCode' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.OriginalCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CustomerName() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.CustomerNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomerName' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.CustomerNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CustomerAddress() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.CustomerAddressColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustomerAddress' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.CustomerAddressColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PhoneNo() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.PhoneNoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PhoneNo' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.PhoneNoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BalanceAmount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.BalanceAmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BalanceAmount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.BalanceAmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PromotionAmount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.PromotionAmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PromotionAmount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.PromotionAmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalNetAmount() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.TotalNetAmountColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalNetAmount' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.TotalNetAmountColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IsChange() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.IsChangeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsChange' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.IsChangeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ItemK() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ItemKColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemK' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ItemKColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ItemP() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ItemPColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemP' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ItemPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ItemY() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.ItemYColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemY' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.ItemYColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GivenDate() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.GivenDateColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GivenDate' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.GivenDateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalCharges() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.TotalChargesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalCharges' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.TotalChargesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PriceCode() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.PriceCodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriceCode' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.PriceCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MemberID() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.MemberIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MemberID' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.MemberIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MemberCode() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.MemberCodeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MemberCode' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.MemberCodeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MemberName() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.MemberNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MemberName' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.MemberNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IsRedeemInvoice() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.IsRedeemInvoiceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsRedeemInvoice' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.IsRedeemInvoiceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RedeemPoint() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.RedeemPointColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedeemPoint' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.RedeemPointColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RedeemValue() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.RedeemValueColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedeemValue' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.RedeemValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TopupPoint() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.TopupPointColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TopupPoint' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.TopupPointColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TopupValue() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.TopupValueColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TopupValue' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.TopupValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MemberDis() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.MemberDisColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MemberDis' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.MemberDisColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MemberDiscountAmt() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.MemberDiscountAmtColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MemberDiscountAmt' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.MemberDiscountAmtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TransactionID() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.TransactionIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TransactionID' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.TransactionIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property InvoiceStatus() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.InvoiceStatusColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvoiceStatus' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.InvoiceStatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PointBalance() As String
            Get
                Try
                    Return CType(Me(Me.tabledtLooseDiamond.PointBalanceColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PointBalance' in table 'dtLooseDiamond' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabledtLooseDiamond.PointBalanceColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSaleLooseDiamondIDNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.SaleLooseDiamondIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSaleLooseDiamondIDNull()
            Me(Me.tabledtLooseDiamond.SaleLooseDiamondIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSaleLooseDiamondDetailIDNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.SaleLooseDiamondDetailIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSaleLooseDiamondDetailIDNull()
            Me(Me.tabledtLooseDiamond.SaleLooseDiamondDetailIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSaleDateNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.SaleDateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSaleDateNull()
            Me(Me.tabledtLooseDiamond.SaleDateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCustomerIDNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.CustomerIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCustomerIDNull()
            Me(Me.tabledtLooseDiamond.CustomerIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStaffNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.StaffColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStaffNull()
            Me(Me.tabledtLooseDiamond.StaffColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRemarkNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.RemarkColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRemarkNull()
            Me(Me.tabledtLooseDiamond.RemarkColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalAmountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.TotalAmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalAmountNull()
            Me(Me.tabledtLooseDiamond.TotalAmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAddOrSubNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.AddOrSubColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAddOrSubNull()
            Me(Me.tabledtLooseDiamond.AddOrSubColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDiscountAmountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.DiscountAmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDiscountAmountNull()
            Me(Me.tabledtLooseDiamond.DiscountAmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPaidAmountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.PaidAmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPaidAmountNull()
            Me(Me.tabledtLooseDiamond.PaidAmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPromotionDiscountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.PromotionDiscountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPromotionDiscountNull()
            Me(Me.tabledtLooseDiamond.PromotionDiscountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPurchaseHeaderIDNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.PurchaseHeaderIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPurchaseHeaderIDNull()
            Me(Me.tabledtLooseDiamond.PurchaseHeaderIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPurchaseAmountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.PurchaseAmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPurchaseAmountNull()
            Me(Me.tabledtLooseDiamond.PurchaseAmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIsOtherCashNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.IsOtherCashColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIsOtherCashNull()
            Me(Me.tabledtLooseDiamond.IsOtherCashColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOtherCashAmountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.OtherCashAmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOtherCashAmountNull()
            Me(Me.tabledtLooseDiamond.OtherCashAmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSRTaxPerNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.SRTaxPerColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSRTaxPerNull()
            Me(Me.tabledtLooseDiamond.SRTaxPerColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSRTaxAmtNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.SRTaxAmtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSRTaxAmtNull()
            Me(Me.tabledtLooseDiamond.SRTaxAmtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsForSaleIDNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ForSaleIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetForSaleIDNull()
            Me(Me.tabledtLooseDiamond.ForSaleIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsItemCodeNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ItemCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetItemCodeNull()
            Me(Me.tabledtLooseDiamond.ItemCodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGemsCategoryIDNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.GemsCategoryIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGemsCategoryIDNull()
            Me(Me.tabledtLooseDiamond.GemsCategoryIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsShapeNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ShapeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetShapeNull()
            Me(Me.tabledtLooseDiamond.ShapeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsColorNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ColorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetColorNull()
            Me(Me.tabledtLooseDiamond.ColorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsClarityNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ClarityColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetClarityNull()
            Me(Me.tabledtLooseDiamond.ClarityColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGemsCategoryNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.GemsCategoryColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGemsCategoryNull()
            Me(Me.tabledtLooseDiamond.GemsCategoryColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGemsNameNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.GemsNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGemsNameNull()
            Me(Me.tabledtLooseDiamond.GemsNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSalesRateNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.SalesRateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSalesRateNull()
            Me(Me.tabledtLooseDiamond.SalesRateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.QtyColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQtyNull()
            Me(Me.tabledtLooseDiamond.QtyColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsItemTKNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ItemTKColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetItemTKNull()
            Me(Me.tabledtLooseDiamond.ItemTKColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsItemTGNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ItemTGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetItemTGNull()
            Me(Me.tabledtLooseDiamond.ItemTGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGemsTWNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.GemsTWColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGemsTWNull()
            Me(Me.tabledtLooseDiamond.GemsTWColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsYOrCOrGNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.YOrCOrGColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetYOrCOrGNull()
            Me(Me.tabledtLooseDiamond.YOrCOrGColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIsFixPriceNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.IsFixPriceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIsFixPriceNull()
            Me(Me.tabledtLooseDiamond.IsFixPriceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFixPriceNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.FixPriceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFixPriceNull()
            Me(Me.tabledtLooseDiamond.FixPriceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGemsPriceNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.GemsPriceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGemsPriceNull()
            Me(Me.tabledtLooseDiamond.GemsPriceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsItemAmountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ItemAmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetItemAmountNull()
            Me(Me.tabledtLooseDiamond.ItemAmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsItemAddOrSubNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ItemAddOrSubColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetItemAddOrSubNull()
            Me(Me.tabledtLooseDiamond.ItemAddOrSubColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDesignChargesNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.DesignChargesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDesignChargesNull()
            Me(Me.tabledtLooseDiamond.DesignChargesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDesignChargesRateNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.DesignChargesRateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDesignChargesRateNull()
            Me(Me.tabledtLooseDiamond.DesignChargesRateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsWhiteChargesNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.WhiteChargesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetWhiteChargesNull()
            Me(Me.tabledtLooseDiamond.WhiteChargesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPlatingChargesNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.PlatingChargesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPlatingChargesNull()
            Me(Me.tabledtLooseDiamond.PlatingChargesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMountingChargesNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.MountingChargesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMountingChargesNull()
            Me(Me.tabledtLooseDiamond.MountingChargesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIsSaleReturnNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.IsSaleReturnColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIsSaleReturnNull()
            Me(Me.tabledtLooseDiamond.IsSaleReturnColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSellingRateNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.SellingRateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSellingRateNull()
            Me(Me.tabledtLooseDiamond.SellingRateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSellingAmtNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.SellingAmtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSellingAmtNull()
            Me(Me.tabledtLooseDiamond.SellingAmtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIsOriginalFixedPriceNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.IsOriginalFixedPriceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIsOriginalFixedPriceNull()
            Me(Me.tabledtLooseDiamond.IsOriginalFixedPriceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOriginalFixedPriceNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.OriginalFixedPriceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOriginalFixedPriceNull()
            Me(Me.tabledtLooseDiamond.OriginalFixedPriceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIsOriginalPriceCaratNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.IsOriginalPriceCaratColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIsOriginalPriceCaratNull()
            Me(Me.tabledtLooseDiamond.IsOriginalPriceCaratColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOriginalPriceCaratNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.OriginalPriceCaratColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOriginalPriceCaratNull()
            Me(Me.tabledtLooseDiamond.OriginalPriceCaratColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOriginalCodeNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.OriginalCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOriginalCodeNull()
            Me(Me.tabledtLooseDiamond.OriginalCodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCustomerNameNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.CustomerNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCustomerNameNull()
            Me(Me.tabledtLooseDiamond.CustomerNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCustomerAddressNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.CustomerAddressColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCustomerAddressNull()
            Me(Me.tabledtLooseDiamond.CustomerAddressColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPhoneNoNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.PhoneNoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPhoneNoNull()
            Me(Me.tabledtLooseDiamond.PhoneNoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBalanceAmountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.BalanceAmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBalanceAmountNull()
            Me(Me.tabledtLooseDiamond.BalanceAmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPromotionAmountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.PromotionAmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPromotionAmountNull()
            Me(Me.tabledtLooseDiamond.PromotionAmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalNetAmountNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.TotalNetAmountColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalNetAmountNull()
            Me(Me.tabledtLooseDiamond.TotalNetAmountColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIsChangeNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.IsChangeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIsChangeNull()
            Me(Me.tabledtLooseDiamond.IsChangeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsItemKNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ItemKColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetItemKNull()
            Me(Me.tabledtLooseDiamond.ItemKColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsItemPNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ItemPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetItemPNull()
            Me(Me.tabledtLooseDiamond.ItemPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsItemYNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.ItemYColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetItemYNull()
            Me(Me.tabledtLooseDiamond.ItemYColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGivenDateNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.GivenDateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGivenDateNull()
            Me(Me.tabledtLooseDiamond.GivenDateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalChargesNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.TotalChargesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalChargesNull()
            Me(Me.tabledtLooseDiamond.TotalChargesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPriceCodeNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.PriceCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPriceCodeNull()
            Me(Me.tabledtLooseDiamond.PriceCodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMemberIDNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.MemberIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMemberIDNull()
            Me(Me.tabledtLooseDiamond.MemberIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMemberCodeNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.MemberCodeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMemberCodeNull()
            Me(Me.tabledtLooseDiamond.MemberCodeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMemberNameNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.MemberNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMemberNameNull()
            Me(Me.tabledtLooseDiamond.MemberNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIsRedeemInvoiceNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.IsRedeemInvoiceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIsRedeemInvoiceNull()
            Me(Me.tabledtLooseDiamond.IsRedeemInvoiceColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRedeemPointNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.RedeemPointColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRedeemPointNull()
            Me(Me.tabledtLooseDiamond.RedeemPointColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRedeemValueNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.RedeemValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRedeemValueNull()
            Me(Me.tabledtLooseDiamond.RedeemValueColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTopupPointNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.TopupPointColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTopupPointNull()
            Me(Me.tabledtLooseDiamond.TopupPointColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTopupValueNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.TopupValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTopupValueNull()
            Me(Me.tabledtLooseDiamond.TopupValueColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMemberDisNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.MemberDisColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMemberDisNull()
            Me(Me.tabledtLooseDiamond.MemberDisColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMemberDiscountAmtNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.MemberDiscountAmtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMemberDiscountAmtNull()
            Me(Me.tabledtLooseDiamond.MemberDiscountAmtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTransactionIDNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.TransactionIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTransactionIDNull()
            Me(Me.tabledtLooseDiamond.TransactionIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsInvoiceStatusNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.InvoiceStatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetInvoiceStatusNull()
            Me(Me.tabledtLooseDiamond.InvoiceStatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPointBalanceNull() As Boolean
            Return Me.IsNull(Me.tabledtLooseDiamond.PointBalanceColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPointBalanceNull()
            Me(Me.tabledtLooseDiamond.PointBalanceColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dtLooseDiamondRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtLooseDiamondRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dtLooseDiamondRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dtLooseDiamondRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
